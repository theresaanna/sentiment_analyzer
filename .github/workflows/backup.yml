name: Database Backup

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update
        sudo apt-get install -y postgresql-client
    
    - name: Run database backup
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        FLASK_ENV: production
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python scripts/db_backup.py backup
    
    - name: Upload backup to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: database-backup-${{ github.run_number }}
        path: backups/*.gz
        retention-days: 30
    
    # Optional: Upload to AWS S3
    # Uncomment and configure if you have S3 set up
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    
    # - name: Upload to S3
    #   run: |
    #     aws s3 cp backups/ s3://${{ secrets.S3_BUCKET }}/backups/ \
    #       --recursive \
    #       --exclude "*" \
    #       --include "*.gz"
    
    # Optional: Send notification on failure
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Database Backup Failed',
            body: `The automated database backup failed on ${new Date().toISOString()}. Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}).`
          })
